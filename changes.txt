
containerCards.innerHTML = '';


for (const task of tasks) {
    const card = document.createElement('div');
    card.classList.add('card');
    card.id = task.id;

    const heading = document.createElement('h3');
    heading.textContent = task.title;
    heading.id = `title${task.id}`;
    card.appendChild(heading);

    const spanDate = document.createElement('span');
    spanDate.textContent = 'Data da tarefa:';
    card.appendChild(spanDate);

    const inputDate = document.createElement('input');
    inputDate.type = 'date';
    inputDate.readOnly = true;
    inputDate.value = task.date;
    inputDate.id = `date${task.id}`;
    card.appendChild(inputDate);

    const descriptionP = document.createElement('p');
    descriptionP.textContent = task.description;
    descriptionP.id = `description${task.id}`;
    card.appendChild(descriptionP);

    const buttonRemove = document.createElement('button');
    buttonRemove.innerHTML = "Excluir Tarefa";
    card.appendChild(buttonRemove);

    const buttonEdit = document.createElement('button');
    buttonEdit.innerHTML = "Editar Tarefa";
    buttonEdit.id = "openModalEdit";
    card.appendChild(buttonEdit);

    const checkBoxLabel = document.createElement('label');
    checkBoxLabel.innerHTML = "Concluir tarefa:";
    const inputTypeCheckBox = document.createElement('input');
    inputTypeCheckBox.type = "checkbox";
    inputTypeCheckBox.id = `checkTask${task.id}`;
    checkBoxLabel.appendChild(inputTypeCheckBox);
    card.appendChild(checkBoxLabel);

    // 3. Adiciona eventos novamente
    buttonRemove.addEventListener('click', () => {
        removeTask(task.id);
    });

    buttonEdit.addEventListener('click', () => {
        modalEdit.classList.add("open");
        editTask(task.id);
    });

    modalEdit.addEventListener('click', (event) => {
        if (event.target === modalEdit) {
            modalEdit.classList.remove("open");
        }
    });

    inputTypeCheckBox.addEventListener('change', () => {
        if (inputTypeCheckBox.checked) {
            finishTask(task.id);
        } else {
            moveToPendingTasks(task.id);
        }
    });

    // 4. Finalmente insere no DOM
    containerCards.appendChild(card);
}